<?php

namespace Practice\JsonParsing\Console\Command;

use Magento\Catalog\Model\ProductRepository;
use Magento\Framework\App\State;
use Magento\Framework\Exception\NoSuchEntityException;
use Practice\JsonParsing\Controller\Index\NiscalHelper;
use Practice\JsonParsing\Logger\Logger;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class ReadJson extends \Symfony\Component\Console\Command\Command
{
    protected $logger;
    private $_helper;
    private $_state;
    protected ProductRepository $_productRepository;

    public function __construct(ProductRepository $productRepository, State $state, Logger $logger, NiscalHelper $helper)
    {
        $this->_productRepository = $productRepository;
        $this->logger = $logger;
        $this->_state = $state;
        $this->_helper = $helper;
        parent::__construct();
    }

    protected function configure()
    {
        $this->setName("practice_jsonparsing:readjson");
        $this->setDescription("Reads json file");
        parent::configure(); // TODO: Change the autogenerated stub
    }

    public function skuExistsOrNot($sku, $item)
    {
        try {
            $products = $this->_productRepository->get($sku);
            echo "Existing SKU" . $sku . '</br>';
            $price = $item['price'];
//            var_dump($price);
            $products->setData('price', $price);
            $products->save();
            var_dump($products->getData('price'));
            $this->_helper->setIsSucsess(true);
            $this->logger->warning('SKU exists');

        } catch (NoSuchEntityException $e) {
            echo "SKU doesn't exists" . $sku . '</br>';
            $this->_helper->setIsSucsess(false);
            $this->logger->warning('SKU Doesnt exist');
        }
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->_state->setAreaCode(\Magento\Framework\App\Area::AREA_GLOBAL);
        $json = file_get_contents("/var/www/html/project-community-edition/app/code/Practice/JsonParsing/var/product.json");
        $string = json_decode($json, true);
        $sku_array = array_map(function ($item) {
            $this->skuExistsOrNot($item['sku'], $item);
        }, $string);
    }
}
